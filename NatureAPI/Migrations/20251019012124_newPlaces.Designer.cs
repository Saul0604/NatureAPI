// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NatureAPI;

#nullable disable

namespace NatureAPI.Migrations
{
    [DbContext(typeof(NatureDbContext))]
    [Migration("20251019012124_newPlaces")]
    partial class newPlaces
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NatureAPI.Models.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Baños"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Estacionamiento"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mirador"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Zona de Picnic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Área de Camping"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Señalización"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sendero Guiado"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Restaurante"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Área de Observación"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Wi-Fi"
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlaceId = 1,
                            Url = "https://example.com/sierra_organos.jpg"
                        },
                        new
                        {
                            Id = 2,
                            PlaceId = 2,
                            Url = "https://example.com/cascada_tamul.jpg"
                        },
                        new
                        {
                            Id = 3,
                            PlaceId = 3,
                            Url = "https://example.com/mirador_taxco.jpg"
                        },
                        new
                        {
                            Id = 4,
                            PlaceId = 4,
                            Url = "https://example.com/lagunas_montebello.jpg"
                        },
                        new
                        {
                            Id = 5,
                            PlaceId = 5,
                            Url = "https://example.com/piedra_volada.jpg"
                        },
                        new
                        {
                            Id = 6,
                            PlaceId = 6,
                            Url = "https://example.com/cerro_campana.jpg"
                        },
                        new
                        {
                            Id = 7,
                            PlaceId = 7,
                            Url = "https://example.com/lagunas_zempoala.jpg"
                        },
                        new
                        {
                            Id = 8,
                            PlaceId = 8,
                            Url = "https://example.com/el_chiflon.jpg"
                        },
                        new
                        {
                            Id = 9,
                            PlaceId = 9,
                            Url = "https://example.com/cerro_silla.jpg"
                        },
                        new
                        {
                            Id = 10,
                            PlaceId = 10,
                            Url = "https://example.com/cabo_pulmo.jpg"
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accessible")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElevationMeters")
                        .HasColumnType("int");

                    b.Property<double>("EntryFee")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(2085),
                            Description = "Formaciones rocosas únicas en Zacatecas",
                            ElevationMeters = 2300,
                            EntryFee = 40.0,
                            Latitude = 24.244,
                            Longitude = -104.47,
                            Name = "Parque Nacional Sierra de Órganos",
                            OpeningHours = "08:00-18:00"
                        },
                        new
                        {
                            Id = 2,
                            Accessible = true,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7765),
                            Description = "Cascada impresionante en San Luis Potosí",
                            ElevationMeters = 200,
                            EntryFee = 20.0,
                            Latitude = 21.48,
                            Longitude = -99.200000000000003,
                            Name = "Cascada de Tamul",
                            OpeningHours = "07:00-17:00"
                        },
                        new
                        {
                            Id = 3,
                            Accessible = true,
                            Category = "Mirador",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7773),
                            Description = "Vista panorámica de la ciudad de plata",
                            ElevationMeters = 1800,
                            EntryFee = 0.0,
                            Latitude = 18.556000000000001,
                            Longitude = -99.605000000000004,
                            Name = "Mirador de Taxco",
                            OpeningHours = "06:00-20:00"
                        },
                        new
                        {
                            Id = 4,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7774),
                            Description = "Lagos de agua cristalina en Chiapas",
                            ElevationMeters = 1500,
                            EntryFee = 30.0,
                            Latitude = 16.033000000000001,
                            Longitude = -91.549999999999997,
                            Name = "Parque Nacional Lagunas de Montebello",
                            OpeningHours = "08:00-18:00"
                        },
                        new
                        {
                            Id = 5,
                            Accessible = false,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7776),
                            Description = "Cascada en Chihuahua rodeada de cañones",
                            ElevationMeters = 1700,
                            EntryFee = 25.0,
                            Latitude = 28.143000000000001,
                            Longitude = -108.23,
                            Name = "Cascada de Piedra Volada",
                            OpeningHours = "08:00-17:00"
                        },
                        new
                        {
                            Id = 6,
                            Accessible = true,
                            Category = "Mirador",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7777),
                            Description = "Vista de la ciudad de Guaymas",
                            ElevationMeters = 600,
                            EntryFee = 10.0,
                            Latitude = 27.917999999999999,
                            Longitude = -110.88800000000001,
                            Name = "Mirador del Cerro de la Campana",
                            OpeningHours = "06:00-20:00"
                        },
                        new
                        {
                            Id = 7,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7779),
                            Description = "Lagos rodeados de bosque",
                            ElevationMeters = 2800,
                            EntryFee = 35.0,
                            Latitude = 19.100000000000001,
                            Longitude = -99.299999999999997,
                            Name = "Parque Nacional Lagunas de Zempoala",
                            OpeningHours = "07:00-18:00"
                        },
                        new
                        {
                            Id = 8,
                            Accessible = true,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7780),
                            Description = "Cascada espectacular en Chiapas",
                            ElevationMeters = 500,
                            EntryFee = 25.0,
                            Latitude = 16.864999999999998,
                            Longitude = -92.016000000000005,
                            Name = "Cascada El Chiflón",
                            OpeningHours = "08:00-17:00"
                        },
                        new
                        {
                            Id = 9,
                            Accessible = true,
                            Category = "Mirador",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7781),
                            Description = "Símbolo de Monterrey con vistas panorámicas",
                            ElevationMeters = 1800,
                            EntryFee = 0.0,
                            Latitude = 25.893000000000001,
                            Longitude = -100.79000000000001,
                            Name = "Mirador del Cerro de la Silla",
                            OpeningHours = "06:00-20:00"
                        },
                        new
                        {
                            Id = 10,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 10, 18, 19, 21, 23, 411, DateTimeKind.Local).AddTicks(7794),
                            Description = "Arrecife de coral en Baja California Sur",
                            ElevationMeters = 0,
                            EntryFee = 50.0,
                            Latitude = 23.495000000000001,
                            Longitude = -109.429,
                            Name = "Parque Nacional Cabo Pulmo",
                            OpeningHours = "07:00-18:00"
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.PlaceAmenity", b =>
                {
                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("PlaceId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("PlaceAmenities");

                    b.HasData(
                        new
                        {
                            PlaceId = 1,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 1,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 2,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 2,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 3,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 4,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 5,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 6,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 7,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 8,
                            AmenityId = 1
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Trail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("float");

                    b.Property<int>("EstimatedTimeMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsLoop")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Trails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Difficulty = "Media",
                            DistanceKm = 4.0,
                            EstimatedTimeMinutes = 120,
                            IsLoop = true,
                            Name = "Sendero Principal",
                            Path = "[[24.244, -104.470],[24.245, -104.472],[24.246, -104.468]]",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Difficulty = "Baja",
                            DistanceKm = 2.0,
                            EstimatedTimeMinutes = 60,
                            IsLoop = false,
                            Name = "Camino a la Cascada",
                            Path = "[[21.480, -99.200],[21.481, -99.202],[21.482, -99.201]]",
                            PlaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            Difficulty = "Media",
                            DistanceKm = 1.2,
                            EstimatedTimeMinutes = 40,
                            IsLoop = true,
                            Name = "Subida al Mirador",
                            Path = "[[18.556, -99.605],[18.557, -99.606],[18.558, -99.604]]",
                            PlaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            Difficulty = "Media",
                            DistanceKm = 3.5,
                            EstimatedTimeMinutes = 90,
                            IsLoop = true,
                            Name = "Circuito de las Lagunas",
                            Path = "[[16.033, -91.550],[16.034, -91.552],[16.035, -91.551]]",
                            PlaceId = 4
                        },
                        new
                        {
                            Id = 5,
                            Difficulty = "Alta",
                            DistanceKm = 2.5,
                            EstimatedTimeMinutes = 80,
                            IsLoop = false,
                            Name = "Caminata Piedra Volada",
                            Path = "[[28.143, -108.230],[28.144, -108.231],[28.145, -108.229]]",
                            PlaceId = 5
                        },
                        new
                        {
                            Id = 6,
                            Difficulty = "Baja",
                            DistanceKm = 1.0,
                            EstimatedTimeMinutes = 30,
                            IsLoop = false,
                            Name = "Ruta Mirador Campana",
                            Path = "[[27.918, -110.888],[27.919, -110.889],[27.920, -110.887]]",
                            PlaceId = 6
                        },
                        new
                        {
                            Id = 7,
                            Difficulty = "Media",
                            DistanceKm = 2.7999999999999998,
                            EstimatedTimeMinutes = 70,
                            IsLoop = true,
                            Name = "Sendero Lagos",
                            Path = "[[19.100, -99.300],[19.101, -99.301],[19.102, -99.302]]",
                            PlaceId = 7
                        },
                        new
                        {
                            Id = 8,
                            Difficulty = "Media",
                            DistanceKm = 3.2000000000000002,
                            EstimatedTimeMinutes = 80,
                            IsLoop = false,
                            Name = "Camino El Chiflón",
                            Path = "[[16.865, -92.016],[16.866, -92.017],[16.867, -92.018]]",
                            PlaceId = 8
                        },
                        new
                        {
                            Id = 9,
                            Difficulty = "Media",
                            DistanceKm = 1.5,
                            EstimatedTimeMinutes = 50,
                            IsLoop = true,
                            Name = "Subida Cerro Silla",
                            Path = "[[25.893, -100.790],[25.894, -100.791],[25.895, -100.792]]",
                            PlaceId = 9
                        },
                        new
                        {
                            Id = 10,
                            Difficulty = "Baja",
                            DistanceKm = 2.0,
                            EstimatedTimeMinutes = 60,
                            IsLoop = true,
                            Name = "Recorrido Arrecife",
                            Path = "[[23.495, -109.429],[23.496, -109.430],[23.497, -109.431]]",
                            PlaceId = 10
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Photo", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("Photos")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.PlaceAmenity", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Amenity", "Amenity")
                        .WithMany("PlaceAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("PlaceAmenities")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Review", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Trail", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("Trails")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Amenity", b =>
                {
                    b.Navigation("PlaceAmenities");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Place", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("PlaceAmenities");

                    b.Navigation("Reviews");

                    b.Navigation("Trails");
                });
#pragma warning restore 612, 618
        }
    }
}
