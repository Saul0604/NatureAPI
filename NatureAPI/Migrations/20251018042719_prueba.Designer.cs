// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NatureAPI;

#nullable disable

namespace NatureAPI.Migrations
{
    [DbContext(typeof(NatureDbContext))]
    [Migration("20251018042719_prueba")]
    partial class prueba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NatureAPI.Models.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Baños"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Estacionamiento"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mirador"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Zona de Picnic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Área de Camping"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Señalización"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sendero Guiado"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Restaurante"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Área de Observación"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Wi-Fi"
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PlaceId = 1,
                            Url = "https://www.gob.mx/cms/uploads/article/main_image/27513/blog_izta_popo.jpg"
                        },
                        new
                        {
                            Id = 2,
                            PlaceId = 2,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRN5dNWqAwUhFHJpo0EaIQdx_tsnLG-FrjaQ&s"
                        },
                        new
                        {
                            Id = 3,
                            PlaceId = 3,
                            Url = "https://imggraficos.gruporeforma.com/2023/06/2-2.jpg"
                        },
                        new
                        {
                            Id = 4,
                            PlaceId = 4,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRI_2vrL7aIS0K2cWYlFutIDKF31_RjAhifOg&s"
                        },
                        new
                        {
                            Id = 5,
                            PlaceId = 5,
                            Url = "https://i0.wp.com/foodandpleasure.com/wp-content/uploads/2024/12/cascada-de-basaseachi1.jpg?fit=1500%2C1610&ssl=1"
                        },
                        new
                        {
                            Id = 6,
                            PlaceId = 6,
                            Url = "https://offloadmedia.feverup.com/guadalajarasecreta.com/wp-content/uploads/2022/10/07033934/cerro-de-la-bufa.jpg"
                        },
                        new
                        {
                            Id = 7,
                            PlaceId = 7,
                            Url = "https://www.gob.mx/cms/uploads/article/main_image/28051/blog_PNCM.jpg"
                        },
                        new
                        {
                            Id = 8,
                            PlaceId = 8,
                            Url = "https://www.mexicodesconocido.com.mx/sites/default/files/nodes/1024/piedra-volada.jpg"
                        },
                        new
                        {
                            Id = 9,
                            PlaceId = 9,
                            Url = "https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Mirador_de_la_Pe%C3%B1a.jpg/1200px-Mirador_de_la_Pe%C3%B1a.jpg"
                        },
                        new
                        {
                            Id = 10,
                            PlaceId = 10,
                            Url = "https://a.travel-assets.com/findyours-php/viewfinder/images/res70/201000/201283-Nevado-De-Toluca-National-Park.jpg"
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accessible")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElevationMeters")
                        .HasColumnType("int");

                    b.Property<double>("EntryFee")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parque con senderos y miradores",
                            ElevationMeters = 3900,
                            EntryFee = 50.0,
                            Latitude = 19.207841800000001,
                            Longitude = -98.664542499999996,
                            Name = "Parque Nacional Iztaccíhuatl",
                            OpeningHours = "08:00-18:00"
                        },
                        new
                        {
                            Id = 2,
                            Accessible = true,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cascada famosa en Nuevo León",
                            ElevationMeters = 50,
                            EntryFee = 0.0,
                            Latitude = 19.349646,
                            Longitude = -98.232528400000007,
                            Name = "Cascada Cola de Caballo",
                            OpeningHours = "08:00-17:00"
                        },
                        new
                        {
                            Id = 3,
                            Accessible = true,
                            Category = "Mirador",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mirador icónico en Monterrey",
                            ElevationMeters = 1800,
                            EntryFee = 0.0,
                            Latitude = 25.8932289,
                            Longitude = -100.7900199,
                            Name = "Mirador del Cerro de la Silla",
                            OpeningHours = "06:00-20:00"
                        },
                        new
                        {
                            Id = 4,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parque natural con senderos",
                            ElevationMeters = 2000,
                            EntryFee = 20.0,
                            Latitude = 25.618748799999999,
                            Longitude = -100.3628164,
                            Name = "Parque Ecológico Chipinque",
                            OpeningHours = "07:00-19:00"
                        },
                        new
                        {
                            Id = 5,
                            Accessible = false,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cascada más alta de Chihuahua",
                            ElevationMeters = 1800,
                            EntryFee = 30.0,
                            Latitude = 28.170499400000001,
                            Longitude = -108.21994650000001,
                            Name = "Cascada de Basaseacic",
                            OpeningHours = "08:00-17:00"
                        },
                        new
                        {
                            Id = 6,
                            Accessible = true,
                            Category = "Mirador",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mirador panorámico en Zacatecas",
                            ElevationMeters = 2500,
                            EntryFee = 10.0,
                            Latitude = 20.7305417,
                            Longitude = -104.8288242,
                            Name = "Mirador La Bufa",
                            OpeningHours = "06:00-20:00"
                        },
                        new
                        {
                            Id = 7,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parque con diversas rutas de senderismo",
                            ElevationMeters = 2600,
                            EntryFee = 40.0,
                            Latitude = 25.413479299999999,
                            Longitude = -100.32432439999999,
                            Name = "Parque Nacional Cumbres de Monterrey",
                            OpeningHours = "07:00-18:00"
                        },
                        new
                        {
                            Id = 8,
                            Accessible = false,
                            Category = "Cascada",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cascada en el cañón de Chihuahua",
                            ElevationMeters = 1700,
                            EntryFee = 25.0,
                            Latitude = 28.142803399999998,
                            Longitude = -108.2298299,
                            Name = "Cascada de Piedra Volada",
                            OpeningHours = "08:00-17:00"
                        },
                        new
                        {
                            Id = 9,
                            Accessible = true,
                            Category = "Mirador",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mirador en Bernal, Queretáro",
                            ElevationMeters = 2100,
                            EntryFee = 15.0,
                            Latitude = 20.5387363,
                            Longitude = -100.40367759999999,
                            Name = "Mirador de la Peña",
                            OpeningHours = "06:00-19:00"
                        },
                        new
                        {
                            Id = 10,
                            Accessible = true,
                            Category = "Parque",
                            CreatedAt = new DateTime(2025, 9, 12, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parque con montaña y lagunas",
                            ElevationMeters = 4600,
                            EntryFee = 50.0,
                            Latitude = 19.1085703,
                            Longitude = -99.757344000000003,
                            Name = "Parque Nacional Nevado de Toluca",
                            OpeningHours = "07:00-18:00"
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.PlaceAmenity", b =>
                {
                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("PlaceId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("PlaceAmenities");

                    b.HasData(
                        new
                        {
                            PlaceId = 1,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 1,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 2,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 2,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 3,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 4,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 5,
                            AmenityId = 1
                        },
                        new
                        {
                            PlaceId = 6,
                            AmenityId = 3
                        },
                        new
                        {
                            PlaceId = 7,
                            AmenityId = 2
                        },
                        new
                        {
                            PlaceId = 8,
                            AmenityId = 1
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Trail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DistanceKm")
                        .HasColumnType("float");

                    b.Property<int>("EstimatedTimeMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsLoop")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Trails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Difficulty = "Media",
                            DistanceKm = 5.0,
                            EstimatedTimeMinutes = 180,
                            IsLoop = true,
                            Name = "Sendero Volcán",
                            Path = "[[19.2200, -98.6570], [19.2220, -98.6630], [19.2200, -98.6570]]",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Difficulty = "Baja",
                            DistanceKm = 2.0,
                            EstimatedTimeMinutes = 60,
                            IsLoop = false,
                            Name = "Mirador Principal",
                            Path = "[[25.1230, -99.1230], [25.1240, -99.1245], [25.1255, -99.1260]]",
                            PlaceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Difficulty = "Baja",
                            DistanceKm = 1.5,
                            EstimatedTimeMinutes = 40,
                            IsLoop = false,
                            Name = "Camino Cascada",
                            Path = "[[25.6750, -100.3090], [25.6765, -100.3075], [25.6780, -100.3060]]",
                            PlaceId = 2
                        },
                        new
                        {
                            Id = 4,
                            Difficulty = "Media",
                            DistanceKm = 1.2,
                            EstimatedTimeMinutes = 45,
                            IsLoop = true,
                            Name = "Subida Mirador",
                            Path = "[[25.6780, -100.2340], [25.6800, -100.2330], [25.6815, -100.2320], [25.6780, -100.2340]]",
                            PlaceId = 3
                        },
                        new
                        {
                            Id = 5,
                            Difficulty = "Media",
                            DistanceKm = 3.5,
                            EstimatedTimeMinutes = 90,
                            IsLoop = true,
                            Name = "Circuito Chipinque",
                            Path = "[[27.0820, -107.8670], [27.0835, -107.8650], [27.0850, -107.8630]]",
                            PlaceId = 4
                        },
                        new
                        {
                            Id = 6,
                            Difficulty = "Alta",
                            DistanceKm = 2.5,
                            EstimatedTimeMinutes = 80,
                            IsLoop = false,
                            Name = "Caminata Basaseachic",
                            Path = "[[22.7710, -102.5830], [22.7715, -102.5820], [22.7720, -102.5810]]",
                            PlaceId = 5
                        },
                        new
                        {
                            Id = 7,
                            Difficulty = "Baja",
                            DistanceKm = 1.0,
                            EstimatedTimeMinutes = 30,
                            IsLoop = false,
                            Name = "Ruta La Bufa",
                            Path = "[[25.4100, -100.2470], [25.4120, -100.2455], [25.4150, -100.2440], [25.4100, -100.2470]]",
                            PlaceId = 6
                        },
                        new
                        {
                            Id = 8,
                            Difficulty = "Alta",
                            DistanceKm = 6.0,
                            EstimatedTimeMinutes = 200,
                            IsLoop = true,
                            Name = "Sendero Monterrey",
                            Path = "[[27.0370, -98.6570], [27.0385, -98.6555], [27.0400, -98.6540]]",
                            PlaceId = 7
                        },
                        new
                        {
                            Id = 9,
                            Difficulty = "Media",
                            DistanceKm = 3.0,
                            EstimatedTimeMinutes = 100,
                            IsLoop = false,
                            Name = "Camino Piedra Volada",
                            Path = "[[20.6670, -100.1230], [20.6685, -100.1215], [20.6700, -100.1200]]",
                            PlaceId = 8
                        },
                        new
                        {
                            Id = 10,
                            Difficulty = "Media",
                            DistanceKm = 1.8,
                            EstimatedTimeMinutes = 50,
                            IsLoop = true,
                            Name = "Subida Peña",
                            Path = "[[19.1180, -99.7670], [19.1200, -99.7650], [19.1220, -99.7630], [19.1180, -99.7670]]",
                            PlaceId = 9
                        });
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Photo", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("Photos")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.PlaceAmenity", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Amenity", "Amenity")
                        .WithMany("PlaceAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("PlaceAmenities")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Review", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Trail", b =>
                {
                    b.HasOne("NatureAPI.Models.Entities.Place", "Place")
                        .WithMany("Trails")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Amenity", b =>
                {
                    b.Navigation("PlaceAmenities");
                });

            modelBuilder.Entity("NatureAPI.Models.Entities.Place", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("PlaceAmenities");

                    b.Navigation("Reviews");

                    b.Navigation("Trails");
                });
#pragma warning restore 612, 618
        }
    }
}
